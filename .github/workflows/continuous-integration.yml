name: "CI"

on:
  pull_request:
  push:
    branches:
      - master
      - "2.**"

env:
  # Force disabling the reporting of Doctrine deprecation notices for now
  DOCTRINE_DEPRECATIONS: none
  PGPASSWORD: wallabagrocks
  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  phpunit:
    name: "PHP ${{ matrix.php }} using ${{ matrix.database }}"
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:3-alpine
        ports:
          - 5672:5672
      redis:
        image: redis:6-alpine
        ports:
          - 6379:6379

    strategy:
      fail-fast: false
      matrix:
        php:
          - "8.2"
          - "8.3"
          - "8.4"
        database:
          - "sqlite"
          - "mysql"
          - "pgsql"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v5"
        with:
          fetch-depth: 2

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"
          coverage: none
          tools: pecl
          extensions: json, pdo, pdo_mysql, pdo_sqlite, pdo_pgsql, curl, imagick, pgsql, gd, tidy
          ini-values: "date.timezone=Europe/Paris"

      - name: "Install Node"
        uses: actions/setup-node@v5
        with:
          node-version-file: ".nvmrc"
          cache: 'yarn'

      - name: "Setup MySQL"
        if: "${{ matrix.database == 'mysql' }}"
        run: |
          sudo systemctl start mysql.service
          sudo mysql -u root -proot -h 127.0.0.1 -e "CREATE DATABASE wallabag_test"

      - name: "Setup PostgreSQL"
        if: "${{ matrix.database == 'pgsql' }}"
        run: |
          sudo systemctl start postgresql
          sudo -u postgres psql -d template1 -c "CREATE USER wallabag WITH PASSWORD 'wallabagrocks' CREATEDB"
          createdb -h localhost -p 5432 -U wallabag wallabag_test
          pg_isready -d wallabag_test -h localhost -p 5432 -U wallabag

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v3"
        with:
          composer-options: "--optimize-autoloader --prefer-dist"

      - name: "Install dependencies with Yarn"
        run: yarn install

      - name: "Build assets with Yarn"
        run: yarn build:dev

      - name: "Prepare database configuration"
        run: cp app/config/tests/parameters_test.${{ matrix.database }}.yml app/config/parameters_test.yml

      - name: "Run PHPUnit"
        run: "php bin/phpunit -v"

  phpunit_no_prefix:
    name: "PHP ${{ matrix.php }} using ${{ matrix.database }} without prefix"
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:3-alpine
        ports:
          - 5672:5672
      redis:
        image: redis:6-alpine
        ports:
          - 6379:6379

    strategy:
      fail-fast: true
      matrix:
        php:
          - "8.2"
        database:
          - "sqlite"
          - "mysql"
          - "pgsql"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v5"
        with:
          fetch-depth: 2

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"
          coverage: none
          tools: pecl
          extensions: json, pdo, pdo_mysql, pdo_sqlite, pdo_pgsql, curl, imagick, pgsql, gd, tidy
          ini-values: "date.timezone=Europe/Paris"

      - name: "Install Node"
        uses: actions/setup-node@v5
        with:
          node-version-file: ".nvmrc"
          cache: 'yarn'

      - name: "Remove database prefix"
        run: |
          pip install --user yq
          yq -Y --in-place '.parameters.database_table_prefix = ""' app/config/parameters.yml.dist

      - name: "Setup MySQL"
        if: "${{ matrix.database == 'mysql' }}"
        run: |
          sudo systemctl start mysql.service
          sudo mysql -u root -proot -h 127.0.0.1 -e "CREATE DATABASE wallabag_test"

      - name: "Setup PostgreSQL"
        if: "${{ matrix.database == 'pgsql' }}"
        run: |
          sudo systemctl start postgresql
          sudo -u postgres psql -d template1 -c "CREATE USER wallabag WITH PASSWORD 'wallabagrocks' CREATEDB"
          createdb -h localhost -p 5432 -U wallabag wallabag_test
          pg_isready -d wallabag_test -h localhost -p 5432 -U wallabag

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v3"
        with:
          composer-options: "--optimize-autoloader --prefer-dist"

      - name: "Install dependencies with Yarn"
        run: yarn install

      - name: "Build assets with Yarn"
        run: yarn build:dev

      - name: "Prepare database configuration"
        run: cp app/config/tests/parameters_test.${{ matrix.database }}.yml app/config/parameters_test.yml

      - name: "Run PHPUnit"
        run: "php bin/phpunit -v"

  phpunit-without-rmq-redis:
    name: "PHP ${{ matrix.php }} using ${{ matrix.database }} without Rabbit & Redis"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php:
          - "8.3"
        database:
          - "sqlite"
          - "mysql"
          - "pgsql"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v5"
        with:
          fetch-depth: 2

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"
          coverage: none
          tools: pecl
          extensions: json, pdo, pdo_mysql, pdo_sqlite, pdo_pgsql, curl, imagick, pgsql, gd, tidy
          ini-values: "date.timezone=Europe/Paris"

      - name: "Install Node"
        uses: actions/setup-node@v5
        with:
          node-version-file: ".nvmrc"
          cache: 'yarn'

      - name: "Setup MySQL"
        if: "${{ matrix.database == 'mysql' }}"
        run: |
          sudo systemctl start mysql.service
          sudo mysql -u root -proot -h 127.0.0.1 -e "CREATE DATABASE wallabag_test"

      - name: "Setup PostgreSQL"
        if: "${{ matrix.database == 'pgsql' }}"
        run: |
          sudo systemctl start postgresql
          sudo -u postgres psql -d template1 -c "CREATE USER wallabag WITH PASSWORD 'wallabagrocks' CREATEDB"
          createdb -h localhost -p 5432 -U wallabag wallabag_test
          pg_isready -d wallabag_test -h localhost -p 5432 -U wallabag

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v3"
        with:
          composer-options: "--optimize-autoloader --prefer-dist"

      - name: "Install dependencies with Yarn"
        run: yarn install

      - name: "Build assets with Yarn"
        run: yarn build:dev

      - name: "Prepare database configuration"
        run: cp app/config/tests/parameters_test.${{ matrix.database }}.yml app/config/parameters_test.yml

      - name: "Run PHPUnit"
        run: "php bin/phpunit -v"
